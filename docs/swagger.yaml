basePath: /
definitions:
  handler.errorResponse:
    properties:
      message:
        example: error description
        type: string
      status:
        example: fail
        type: string
    type: object
  handler.resultResponse:
    properties:
      id:
        example: 1
        type: integer
      status:
        example: success
        type: string
      text:
        example: description
        type: string
    type: object
  models.Song:
    properties:
      group:
        example: Muse
        type: string
      id:
        example: 1
        type: integer
      link:
        example: https://www.youtube.com/watch?v=Xsp3_a-PMTw
        type: string
      release_date:
        example: "2006-07-19"
        type: string
      song_name:
        example: Supermassive Black Hole
        type: string
      text:
        example: |-
          Ooh baby, don't you know I suffer?
          Ooh baby, can you hear me moan?
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is an API for managing songs.
  title: Songs API
  version: "1.0"
paths:
  /info:
    get:
      consumes:
      - application/json
      description: Получение списка песен из базы данных с фильтрацией по параметрам
      parameters:
      - default: Supermassive Black Hole
        description: Название песни
        in: query
        name: song
        type: string
      - default: Muse
        description: Группа
        in: query
        name: group
        type: string
      - description: ID песни
        in: query
        name: id
        type: integer
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Дата с
        example: "2006-07-19"
        in: query
        name: since
        type: string
      - description: Дата по
        example: "2006-07-19"
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Получение списка песен
      tags:
      - songs
  /info/verse:
    get:
      consumes:
      - application/json
      description: Получение текста конкретного куплета песни(Обязательные параметры
        - song,group или id)
      parameters:
      - default: Supermassive Black Hole
        description: Название песни
        in: query
        name: song
        type: string
      - default: Muse
        description: Группа
        in: query
        name: group
        type: string
      - default: 1
        description: ID песни
        in: query
        name: id
        type: integer
      - description: Номер куплета
        example: 1
        in: query
        name: verse
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.resultResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Получение текста куплета песни
      tags:
      - songs
  /songs:
    delete:
      consumes:
      - application/json
      description: Удаление песни по предоставленным данным(Обязательные параметры-
        song,group или id)
      parameters:
      - description: Данные песни для удаления
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.resultResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Удаление песни
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Добавление новой песни в базу данных(Обязательные параметры - song,group)
      parameters:
      - description: Данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.resultResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Добавление новой песни
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Обновление информации о песне по предоставленным данным(Обязательные
        параметры- song,group или id)
      parameters:
      - description: Данные песни для обновления
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.resultResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Обновление информации о песне
      tags:
      - songs
swagger: "2.0"
